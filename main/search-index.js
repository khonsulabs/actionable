var searchIndex = JSON.parse('{\
"actionable":{"doc":"Actionable provides the basic functionality needed to …","t":[12,8,24,3,4,24,13,13,4,8,24,4,13,13,3,3,3,16,13,3,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["0","Action","Action","ActionName","ActionNameList","Actionable","All","Any","Configuration","Dispatcher","Dispatcher","Identifier","Integer","List","PermissionDenied","Permissions","ResourceName","Result","Signed","Statement","String","String","Unsigned","action","actions","allow","allow_all","allow_all","allow_all_for_any_resource","allowed_to","allowing","allowing_all","and","any","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","configuration","configure","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dispatch","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_any","for_resource","for_resources","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","hash","into","into","into","into","into","into","into","into","into_iter","merged","name","name","named","ne","resource","resources","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_signed","to_string","to_string","to_string","to_string","to_string","to_unsigned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with","0","0","0","0","0","0"],"q":["actionableactionable::ActionNameList","actionable::Configuration","","","actionable::Identifier",""],"d":["","An action that can be allowed or disallowed.","Derives the <code>actionable::Action</code> trait.","A unique name of an action.","A list of <code>ActionName</code>s.","Derives a set of traits that can be used to implement a …","All actions.","When checking for allowed permissions, allow any match …","A configured value for a resource.","Dispatches <code>T</code> to an appropriate handler. This trait is …","Derives the <code>Dispatcher</code> trait.","A single element of a <code>ResourceName</code>","An integer identifier.","A specific list of names.","An <code>action</code> was denied.","A collection of allowed permissions. This is constructed …","A unique name/identifier of a resource.","The type of the result.","A signed integer configuration value.","A statement of permissions. A statement describes whether …","A string identifier.","A string configuration value.","An unsigned integer configuration value.","The <code>action</code> attempted upon <code>resource</code>.","The list of actions this statement applies to.","Allows <code>action</code> to be performed.","Returns a <code>Permisions</code> instance constructed with …","Allows <code>ActionNameList::All</code>.","Returns a statement that allows <code>ActionNameList::All</code> against","Evaluate whether the <code>action</code> is allowed to be taken upon …","Allows <code>action</code> and returns self.","Allows <code>ActionNameList::All</code> and returns self.","Adds another name segment.","Creates a <code>ResourceName</code> that matches any identifier.","","","","","","","","","","","","","","","","","","Evaluate whether the <code>action</code> is allowed to be taken upon …","","","","","","","","","","","","","Any configured values for these resources.","Sets <code>configuration</code> for <code>key</code> for the resources in this …","","","","","","","","","","","","Dispatches <code>request</code> to the appropriate handler while also …","","","","","","","","","","","","","","","Returns an empty statement for <code>ResourceName::any()</code>.","Returns an empty statement for a resource named <code>name</code>.","Returns an empty statement for a resources named <code>names</code>.","","","","","","","","","","","","","","","","","","","","","","","","Looks up a configured value for <code>resource_name</code>.","","","","","","","","","","","Returns a new instance that merges all allowed actions from","The full name of this action.","","Creates a <code>ResourceName</code> with <code>name</code>.","","The resource that <code>action</code> was attempted upon.","The list of resources this statement applies to.","","","","","","","","","","","","Convert this identifier to an un-borrowed identifier.","","","Convert a borrowed name to an un-borrwed name.","","Evaluates the contents of this configuration as a signed …","","","","","","Evaluates the contents of this configuration as an …","","","","","","","","","","","","","","","","","","","","","","","","","Configures <code>configuration</code> for <code>key</code> and returns self.","","","","","",""],"i":[1,0,0,0,0,0,2,3,0,0,0,0,3,2,0,0,0,4,5,0,3,5,5,6,7,7,8,7,7,8,7,7,9,9,9,1,8,7,3,2,5,9,6,1,8,7,3,2,5,9,6,8,1,8,3,5,9,6,1,8,3,5,9,6,7,7,1,8,9,1,8,7,3,2,5,9,6,4,3,1,1,8,7,3,3,2,5,5,9,9,6,6,7,7,7,1,8,8,8,7,3,3,3,3,3,2,2,2,5,5,5,5,5,9,9,9,9,6,8,3,1,8,7,3,2,5,9,6,9,8,10,1,9,3,6,7,1,8,7,3,2,5,9,6,1,8,3,3,5,9,9,6,5,1,3,5,9,6,5,1,8,7,3,2,5,9,6,1,8,7,3,2,5,9,6,1,8,7,3,2,5,9,6,7,11,12,13,14,15,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["asref",8]],["bool",15]],[[]],[[]],[[["into",8,[["identifier",4]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8]],["result",4,[["permissiondenied",3]]]],[[],["actionname",3]],[[],["permissions",3]],[[],["identifier",4]],[[],["configuration",4]],[[],["resourcename",3]],[[],["permissiondenied",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["into",8,[["string",3]]],["into",8,[["configuration",4]]]]],[[],["actionname",3]],[[],["permissions",3]],[[],["resourcename",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["permissions",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["identifier",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["intoiterator",8]]],[[]],[[]],[[["statement",3]]],[[["vec",3,[["statement",3]]]]],[[]],[[["string",3]]],[[]],[[["string",3]]],[[["str",15]]],[[["u64",15]]],[[]],[[]],[[["vec",3]]],[[]],[[["u64",15]]],[[["i64",15]]],[[["string",3]]],[[["str",15]]],[[]],[[["str",15]]],[[["u64",15]]],[[]],[[]],[[["asref",8],["str",15]],["option",4,[["configuration",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["actionname",3]],[[],["actionname",3]],[[["into",8,[["identifier",4]]]]],[[["identifier",4]],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["identifier",4]],[[]],[[]],[[],["resourcename",3]],[[]],[[],["option",4,[["i64",15]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["option",4,[["u64",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["into",8,[["string",3]]],["into",8,[["configuration",4]]]]],null,null,null,null,null,null],"p":[[3,"ActionName"],[4,"ActionNameList"],[4,"Identifier"],[8,"Dispatcher"],[4,"Configuration"],[3,"PermissionDenied"],[3,"Statement"],[3,"Permissions"],[3,"ResourceName"],[8,"Action"],[13,"List"],[13,"Unsigned"],[13,"Signed"],[13,"String"],[13,"Integer"],[13,"String"]]},\
"actionable_macros":{"doc":"Macros for the <code>actionable</code> API framework.","t":[24,24,24],"n":["Action","Actionable","Dispatcher"],"q":["actionable_macros","",""],"d":["Derives the <code>actionable::Action</code> trait.","Derives a set of traits that can be used to implement a …","Derives the <code>Dispatcher</code> trait."],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"xtask":{"doc":"","t":[4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12],"n":["Commands","CoverageConfig","GenerateCodeCoverageReport","borrow","borrow","borrow_mut","borrow_mut","clap","fmt","from","from","from_clap","ignore_paths","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","install_dependencies"],"q":["xtask","","","","","","","","","","","","","","","","","","","","","","xtask::Commands"],"d":["","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,1,2,1,1,2,2,1,0,2,1,2,1,2,1,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[],["vec",3,[["string",3]]]],[[]],[[]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Commands"],[3,"CoverageConfig"],[13,"GenerateCodeCoverageReport"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};